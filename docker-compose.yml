version: '3.9'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: mini_pms
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  redis:
    image: redis:7-alpine
    command: ["redis-server", "--save", "", "--appendonly", "no"]
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    environment:
      NODE_ENV: production
      PORT: 5000
      # Adjust the connection string to your AWS RDS if needed
      DATABASE_URL: postgres://postgres:postgres@postgres:5432/mini_pms
      PGHOST: postgres
      PGUSER: postgres
      PGPASSWORD: postgres
      PGDATABASE: mini_pms
      PGPORT: 5432
      JWT_SECRET: change_me_in_prod
      CORS_ORIGIN: "*"
      # Redis connection (used for refresh tokens / caching)
      REDIS_URL: redis://redis:6379
      # Sentry configuration (set your DSN here or via env/secrets)
      SENTRY_DSN: ""
      SENTRY_ENV: "production"
      SENTRY_TRACES_SAMPLE_RATE: "0.05"
    depends_on:
      - postgres
      - redis
    ports:
      - "5000:5000"

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    environment:
      NODE_ENV: production
      # Use relative /api in browser by default; can override as needed
      NEXT_PUBLIC_API_BASE_URL: "/api"
    depends_on:
      - backend
    ports:
      - "3000:3000"

  nginx:
    image: nginx:1.27-alpine
    depends_on:
      - frontend
      - backend
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro

volumes:
  db_data:
  redis_data:
